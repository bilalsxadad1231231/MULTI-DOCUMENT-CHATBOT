name: CI/CD Pipeline for ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: "us-east-1"
  AWS_ACCOUNT_ID: "940482422254"
  REPO_NAME: "bilalawspractice/first-chatbot-app"
  CLUSTER_NAME: "backendCluster"
  SERVICE_NAME: "backend-service"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build the Docker image
      run: |
        docker build -t $REPO_NAME .

    - name: Tag the Docker image
      run: |
        docker tag $REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:latest

    - name: Push the Docker image to Amazon ECR
      run: |
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:latest

    - name: Update ECS service
      run: |
        aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment

    - name: Run Docker container with API keys
      run: |
        docker run -e GROQ_API_KEY="${{ secrets.GROQ_API_KEY }}" \
                   -e HUGGINGFACE_API_KEY="${{ secrets.HUGGINGFACE_API_KEY }}" \
                   $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME:latest
